{"_GET":[],"_POST":{"url":"undefined","class":"database","cargs":"[\"mutall_mashamba\"]","method":"get_sql_data","margs":"[\"\\n            -- Formulate the office query in 3 parts: images, documents, and transcription\\r\\nwith\\r\\n    # List the available categories by document counts\\r\\n    list_category as (\\r\\n        select \\r\\n            category.category,\\r\\n            category.name,\\r\\n            count(document.document) as counts\\r\\n        from category\\r\\n            inner join document on document.category=category.category\\r\\n        group by \\r\\n            category.category, \\r\\n            category.name    \\r\\n    ), \\r\\n    \\r\\n    # The type of this output is:=\\r\\n    # type categories = Array<category>\\r\\n    # type category = {pk:number, name:string, documents:number}\\r\\n    report_category as (\\r\\n        select\\r\\n            json_arrayagg(\\r\\n                json_object(\\r\\n                    \\\"pk\\\", category,\\r\\n                    \\\"name\\\", name,\\r\\n                    \\\"documents\\\", counts\\r\\n                )\\r\\n            ) as category\\r\\n        from \\r\\n            list_category\\r\\n    ),\\r\\n\\r\\n    # Compile the images of a document, one for each page\\r\\n    images as (\\r\\n        select\\r\\n            image.document,\\r\\n            json_arrayagg(json_object(\\r\\n                'num', image.page, \\r\\n                'url', image.url, \\r\\n                'name', image.name\\r\\n            )) as images\\r\\n        from image\\r\\n        group by\\r\\n            document\\r\\n    ),\\r\\n    #\\r\\n    # Compile the document identifier that is vsisible in the documents\\r\\n    #panel\\r\\n    get_id as (\\r\\n        select\\r\\n            document.document,\\r\\n            #\\r\\n            # A visible link for driving the documents panel\\r\\n            concat_ws(\\\"\/\\\", document.id, person, area) as id\\r\\n        from document\\r\\n            inner join image on image.document = document.document\\r\\n            inner join folder on document.folder = folder.folder\\r\\n    ),\\r\\n    #\\r\\n    # Compile the contents for the transcriptions panel\\r\\n    transcriptions as (\\r\\n        select\\r\\n            document.document,\\r\\n            json_object(\\r\\n                \\\"id\\\", id,\\r\\n                \\\"area\\\", area,\\r\\n                \\\"person\\\", person,\\r\\n                \\\"regno\\\", regno\\r\\n            ) as transcriptions\\r\\n        from document\\r\\n    ),\\r\\n    #\\r\\n    # Compile the list for the documents panel\\r\\n    documents as (\\r\\n        select\\r\\n            json_object(\\r\\n                \\\"id\\\", get_id.id,\\r\\n                \\\"images\\\", images.images,\\r\\n                \\\"transcrptions\\\", transcriptions.transcriptions\\r\\n            ) as document\\r\\n            \\r\\n        from \\r\\n            document\\r\\n            left join images on images.document = document.document\\r\\n            inner join get_id on get_id.document = document.document\\r\\n            inner join transcriptions on transcriptions.document = document.document\\r\\n    )\\n            select\\n                json_arrayagg(documents) as documents\\n            from\\n                documents\"]"},"_COOKIE":{"amp_a0683b":"EOBDFtVOQEAiET1Zmk6eaz.NWFoMG0xYjMwZHhobQ==..1h6m7pnbn.1h6m7pnbn.0.0.0","amp_6e403e":"vtQfA5-P-eUm4XHfBwV2SA...1hes6a2q1.1hes6a2q1.0.9j.9j"},"_FILES":[],"_ENV":[],"_REQUEST":{"url":"undefined","class":"database","cargs":"[\"mutall_mashamba\"]","method":"get_sql_data","margs":"[\"\\n            -- Formulate the office query in 3 parts: images, documents, and transcription\\r\\nwith\\r\\n    # List the available categories by document counts\\r\\n    list_category as (\\r\\n        select \\r\\n            category.category,\\r\\n            category.name,\\r\\n            count(document.document) as counts\\r\\n        from category\\r\\n            inner join document on document.category=category.category\\r\\n        group by \\r\\n            category.category, \\r\\n            category.name    \\r\\n    ), \\r\\n    \\r\\n    # The type of this output is:=\\r\\n    # type categories = Array<category>\\r\\n    # type category = {pk:number, name:string, documents:number}\\r\\n    report_category as (\\r\\n        select\\r\\n            json_arrayagg(\\r\\n                json_object(\\r\\n                    \\\"pk\\\", category,\\r\\n                    \\\"name\\\", name,\\r\\n                    \\\"documents\\\", counts\\r\\n                )\\r\\n            ) as category\\r\\n        from \\r\\n            list_category\\r\\n    ),\\r\\n\\r\\n    # Compile the images of a document, one for each page\\r\\n    images as (\\r\\n        select\\r\\n            image.document,\\r\\n            json_arrayagg(json_object(\\r\\n                'num', image.page, \\r\\n                'url', image.url, \\r\\n                'name', image.name\\r\\n            )) as images\\r\\n        from image\\r\\n        group by\\r\\n            document\\r\\n    ),\\r\\n    #\\r\\n    # Compile the document identifier that is vsisible in the documents\\r\\n    #panel\\r\\n    get_id as (\\r\\n        select\\r\\n            document.document,\\r\\n            #\\r\\n            # A visible link for driving the documents panel\\r\\n            concat_ws(\\\"\/\\\", document.id, person, area) as id\\r\\n        from document\\r\\n            inner join image on image.document = document.document\\r\\n            inner join folder on document.folder = folder.folder\\r\\n    ),\\r\\n    #\\r\\n    # Compile the contents for the transcriptions panel\\r\\n    transcriptions as (\\r\\n        select\\r\\n            document.document,\\r\\n            json_object(\\r\\n                \\\"id\\\", id,\\r\\n                \\\"area\\\", area,\\r\\n                \\\"person\\\", person,\\r\\n                \\\"regno\\\", regno\\r\\n            ) as transcriptions\\r\\n        from document\\r\\n    ),\\r\\n    #\\r\\n    # Compile the list for the documents panel\\r\\n    documents as (\\r\\n        select\\r\\n            json_object(\\r\\n                \\\"id\\\", get_id.id,\\r\\n                \\\"images\\\", images.images,\\r\\n                \\\"transcrptions\\\", transcriptions.transcriptions\\r\\n            ) as document\\r\\n            \\r\\n        from \\r\\n            document\\r\\n            left join images on images.document = document.document\\r\\n            inner join get_id on get_id.document = document.document\\r\\n            inner join transcriptions on transcriptions.document = document.document\\r\\n    )\\n            select\\n                json_arrayagg(documents) as documents\\n            from\\n                documents\"]"},"_SERVER":{"MIBDIRS":"C:\/xampp\/php\/extras\/mibs","MYSQL_HOME":"\\xampp\\mysql\\bin","OPENSSL_CONF":"C:\/xampp\/apache\/bin\/openssl.cnf","PHP_PEAR_SYSCONF_DIR":"\\xampp\\php","PHPRC":"\\xampp\\php","TMP":"\\xampp\\tmp","HTTP_HOST":"localhost","HTTP_CONNECTION":"keep-alive","CONTENT_LENGTH":"3560","HTTP_SEC_CH_UA":"\"Google Chrome\";v=\"119\", \"Chromium\";v=\"119\", \"Not?A_Brand\";v=\"24\"","HTTP_SEC_CH_UA_PLATFORM":"\"Windows\"","HTTP_SEC_CH_UA_MOBILE":"?0","HTTP_USER_AGENT":"Mozilla\/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/119.0.0.0 Safari\/537.36","CONTENT_TYPE":"multipart\/form-data; boundary=----WebKitFormBoundaryr2zlQiVuKrB8F6gF","HTTP_ACCEPT":"*\/*","HTTP_ORIGIN":"http:\/\/localhost","HTTP_SEC_FETCH_SITE":"same-origin","HTTP_SEC_FETCH_MODE":"cors","HTTP_SEC_FETCH_DEST":"empty","HTTP_REFERER":"http:\/\/localhost\/mashamba\/v\/mmm\/mmm.html","HTTP_ACCEPT_ENCODING":"gzip, deflate, br","HTTP_ACCEPT_LANGUAGE":"en,en-US;q=0.9","HTTP_COOKIE":"amp_a0683b=EOBDFtVOQEAiET1Zmk6eaz.NWFoMG0xYjMwZHhobQ==..1h6m7pnbn.1h6m7pnbn.0.0.0; amp_6e403e=vtQfA5-P-eUm4XHfBwV2SA...1hes6a2q1.1hes6a2q1.0.9j.9j","PATH":"C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Program Files\\Common Files\\Oracle\\Java\\javapath;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\Git\\cmd;C:\\Program Files\\nodejs\\;C:\\Program Files\\dotnet\\;C:\\Program Files\\MongoDB\\Server\\6.0\\bin;C:\\php-8.1.12;C:\\xampp\\mysql\\bin;C:\\Users\\ndich\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ndich\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Program Files\\Java\\jdk-19\\bin;C:\\Users\\ndich\\AppData\\Roaming\\npm;C:\\Program Files\\JetBrains\\PyCharm 2023.2\\bin;;C:\\Users\\ndich\\AppData\\Local\\GitHubDesktop\\bin","SystemRoot":"C:\\Windows","COMSPEC":"C:\\Windows\\system32\\cmd.exe","PATHEXT":".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC","WINDIR":"C:\\Windows","SERVER_SIGNATURE":"<address>Apache\/2.4.54 (Win64) OpenSSL\/1.1.1p PHP\/8.1.12 Server at localhost Port 80<\/address>\n","SERVER_SOFTWARE":"Apache\/2.4.54 (Win64) OpenSSL\/1.1.1p PHP\/8.1.12","SERVER_NAME":"localhost","SERVER_ADDR":"::1","SERVER_PORT":"80","REMOTE_ADDR":"::1","DOCUMENT_ROOT":"G:\/mutall_projects","REQUEST_SCHEME":"http","CONTEXT_PREFIX":"","CONTEXT_DOCUMENT_ROOT":"G:\/mutall_projects","SERVER_ADMIN":"postmaster@localhost","SCRIPT_FILENAME":"G:\/mutall_projects\/schema\/v\/code\/index.php","REMOTE_PORT":"1066","GATEWAY_INTERFACE":"CGI\/1.1","SERVER_PROTOCOL":"HTTP\/1.1","REQUEST_METHOD":"POST","QUERY_STRING":"","REQUEST_URI":"\/schema\/v\/code\/index.php","SCRIPT_NAME":"\/schema\/v\/code\/index.php","PHP_SELF":"\/schema\/v\/code\/index.php","REQUEST_TIME_FLOAT":1700464035.403906,"REQUEST_TIME":1700464035},"output":{}}